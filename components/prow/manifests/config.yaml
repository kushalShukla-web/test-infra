apiVersion: v1
kind: ConfigMap
metadata:
  name: config
data:
  config.yaml: |
    plank:
      job_url_template: 'http://{{ .INGRESS_IP }}/log?job={{"{{"}}.Spec.Job{{"}}"}}&id={{"{{"}}.Status.BuildID{{"}}"}}'
      pod_pending_timeout: 60m
      default_decoration_config:
        timeout: 7200000000000 # 2h
        grace_period: 15000000000 # 15s
        utility_images:
          clonerefs: "registry.svc.ci.openshift.org/ci/clonerefs:latest"
          initupload: "registry.svc.ci.openshift.org/ci/initupload:latest"
          entrypoint: "registry.svc.ci.openshift.org/ci/entrypoint:latest"
          sidecar: "registry.svc.ci.openshift.org/ci/sidecar:latest"
        gcs_configuration:
          bucket: "{{ .GCS_BUCKET }}"
          path_strategy: "explicit"
          default_org: "{{ .GITHUB_ORG }}"
          default_repo: "{{ .GITHUB_REPO }}"
        gcs_credentials_secret: "service-account"

    log_level: info

    periodics:
    - interval: 10m
      agent: kubernetes
      name: echo-test
      spec:
        containers:
        - image: alpine:latest
          command: ["/bin/date"]
        nodeSelector:
          cloud.google.com/gke-nodepool: prow

    # These configurations are NOT for PR presubmits as used by the trigger plugin. 
    # These are used to create prowjobs for the benchmark plugin. 
    presubmits:
      {{ .GITHUB_ORG }}/{{ .GITHUB_REPO }}:
      - name: start-benchmark
        context: start-benchmark
        always_run: false
        skip_report: false
        agent: kubernetes
        spec:
          containers:
          - image: docker.io/sipian/prombench:v2.0.0
            imagePullPolicy: Always
            command:
            - "make"
            args:
            - "deploy"
            env:
            - name: PROJECT_ID
              value: "{{ .PROJECT_ID }}"
            - name: ZONE
              value: "{{ .ZONE }}"
            - name: CLUSTER_NAME
              value: "{{ .CLUSTER_NAME }}"
            volumeMounts:
            - name: serviceaccount
              mountPath: /etc/serviceaccount/
              readOnly: true
          volumes:
          - name: serviceaccount
            secret:
              secretName: service-account
          nodeSelector:
            cloud.google.com/gke-nodepool: prow
      - name: cancel-benchmark
        context: cancel-benchmark
        always_run: false
        skip_report: false
        agent: kubernetes
        spec:
          containers:
          - image: docker.io/sipian/prombench:v2.0.0
            imagePullPolicy: Always
            command:
            - "make"
            args:
            - "clean"
            env:
            - name: PROJECT_ID
              value: "{{ .PROJECT_ID }}"
            - name: ZONE
              value: "{{ .ZONE }}"
            - name: CLUSTER_NAME
              value: "{{ .CLUSTER_NAME }}"
            volumeMounts:
            - name: serviceaccount
              mountPath: /etc/serviceaccount/
              readOnly: true
          volumes:
          - name: serviceaccount
            secret:
              secretName: service-account
          nodeSelector:
            cloud.google.com/gke-nodepool: prow
      - name: build-PR-images
        context: build-PR-images
        always_run: false
        skip_report: false
        agent: kubernetes
        decorate: true
        path_alias: /github.com/prometheus/prometheus
        spec:
          containers:
          - image: docker.io/sipian/golang-builder:prow
            imagePullPolicy: Always
            command:
            - "./prow/benchmark_build.sh"
            volumeMounts:
            - name: serviceaccount
              mountPath: /etc/serviceaccount
              readOnly: true
            - name: docker-sock
              mountPath: /var/run/docker.sock
          volumes:
          - name: serviceaccount
            secret:
              secretName: service-account          
          - name: docker-sock 
            hostPath: 
                path: /var/run/docker.sock
          nodeSelector:
            cloud.google.com/gke-nodepool: prow
