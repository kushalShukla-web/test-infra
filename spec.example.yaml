awsRegion: eu-central-1
prometheus:
  machineType: m3.xlarge
  scrapeInterval: 4s
  instances:
  - name: v2-0-0
    image: quay.io/prometheus/prometheus:v2.0.0
    resources:
      requests:
        memory: 6Gi
        cpu: 3.9
      limits:
        # m3.xlarge has 15Gi memory and 4 vCPUs, so we're leaving some space for system components so the node doesn't crash
        memory: 14Gi
        cpu: 3.9
    flags:
    - '--storage.tsdb.min-block-duration=15m'
    - '--storage.tsdb.max-block-duration=4h'
  - name: v2-1-0
    image: quay.io/brancz/prometheus:v2.2.0-rc.0
    resources:
      requests:
        memory: 6Gi
        cpu: 3.9
      limits:
        # m3.xlarge has 15Gi memory and 4 vCPUs, so we're leaving some space for system components so the node doesn't crash
        memory: 14Gi
        cpu: 3.9
    flags:
    - '--storage.tsdb.min-block-duration=15m'
    - '--storage.tsdb.max-block-duration=4h'
workers:
  count: 6
  machineType: c4.large
  appInstances: 150
loadGenerator:
  scaler:
    name: fake-webserver
    high: 150
    low: 50
    intervalMinutes: 15
  querier:
    targets:
    - name: v2-0-0
    - name: v2-1-0
    groups:
    - name: simple_range
      interval: 4s
      type: range
      start: 2h
      end: 1h
      step: 15s
      queries:
      - expr: go_goroutines
      - expr: container_memory_rss
      - expr: kube_pod_container_info
      - expr: codelab_api_http_requests_in_progress
      - expr: codelab_api_requests_total
    - name: aggr_instant
      interval: 10s
      type: instant
      queries:
      - expr: sum by(image) (container_memory_rss)
      - expr: sum by(instance) (rate(node_cpu{mode!="idle"}[2m]))
      - expr: sum by(instance) (rate(node_cpu[2m]))
      - expr: sum by(instance) (rate(codelab_api_requests_total[2m]))
      - expr: sum by(instance) (rate(codelab_api_requests_total{method=~"GET|POST"}[2m]))
    - name: aggr_range
      interval: 10s
      type: range
      start: 1h
      end: 0h
      step: 15s
      queries:
      - expr: sum by(image) (container_memory_rss)
      - expr: sum by(instance) (rate(node_cpu{mode!="idle"}[2m]))
      - expr: sum by(instance) (rate(node_cpu[2m]))
      - expr: sum by(instance) (rate(codelab_api_requests_total[2m]))
      - expr: sum by(instance) (rate(codelab_api_requests_total{method=~"GET|POST"}[2m]))
    - name: heavy_instant
      interval: 20s
      queries:
      - expr: rate(codelab_api_requests_total{method=~"GET|POST"}[1m])
      - expr: sum without(instance) (rate(codelab_api_requests_total{method=~"GET|POST"}[1m]))
      - expr: histogram_quantile(0.99, sum by(path, le) (rate(codelab_api_request_duration_seconds_bucket{method="POST"}[1m])))
      - expr: histogram_quantile(0.99, sum by(path, method, le) (rate(codelab_api_request_duration_seconds_bucket{method="POST"}[1m])))
      - expr: histogram_quantile(0.99, sum by(instance, le) (rate(codelab_api_request_duration_seconds_bucket{method="POST"}[1m])))
